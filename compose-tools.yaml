services:
  node:
    image: node:20-alpine
    volumes:
      - ./frontend:/app
    working_dir: /app
    environment:
      - NODE_ENV=development

  go:
    build:
      context: ./backend
      dockerfile: ../docker/backend/Dockerfile
    volumes:
      - ./backend:/go/src/github.com/hyorimitsu/knowledge-hub/backend
    working_dir: /go/src/github.com/hyorimitsu/knowledge-hub/backend
    profiles:
      - tools

  test:
    extends:
      service: go
    command: go test -v ./...
    profiles:
      - tools

  lint:
    extends:
      service: go
    command: golangci-lint run
    profiles:
      - tools

  swag:
    extends:
      service: go
    command: swag init -g cmd/api/main.go -o docs/openapi
    profiles:
      - tools

  tidy:
    extends:
      service: go
    command: go mod tidy
    profiles:
      - tools

  vendor:
    extends:
      service: go
    command: go mod vendor
    profiles:
      - tools

  fmt:
    extends:
      service: go
    command: go fmt ./...
    profiles:
      - tools

  create-tenant:
    extends:
      service: node
    command: sh -c "npm install node-fetch && node /app/create-tenant.js"
    volumes:
      - ./create-tenant.js:/app/create-tenant.js
    networks:
      - default
    profiles:
      - tools

  create-tenant-sql:
    image: postgres:16-alpine
    command: psql -h postgres -U postgres -d knowledge_hub -f /scripts/create-tenant.sql
    volumes:
      - ./create-tenant.sql:/scripts/create-tenant.sql
    environment:
      - PGPASSWORD=postgres
    networks:
      - default
    profiles:
      - tools
